# Top level block specific for load balancing workloads
#stream {

    # Load balancing internal (server facing) connection info
    upstream backend {
        # Strategy:
        # Default Roundrobin use Nothing
        # 
        # Prioritizes based on active connections, the lower amount of connections the more likely is the connection.
        # least_conn;
        #
        # Hash incoming IP and send to coresponding Node, ensures each client keeps the same server on each connection.
        # hash $remote_addr consistent;
        #
        # Randomize which server to forward to. Can weigh the random probability using 1 of 4 criteria
        # random two least_time=last_byte; OR least_conn; OR least_time=connect; OR least_time=first_byte;

        server node:80;
        # More servers bellow if needed
        # server node-3:5050;
        # server node-4:5050;
        # ...
    }

    # Load balancing external (client facing) connection info
    server {
        # Accept clients on port 80 (HTTP)
        listen 80;
        
        include /etc/nginx/mime.types;

        # Send clients that accsses any webserver path to our load balancer
        location / {
            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
#}